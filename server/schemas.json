{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "AccountIdentifiable": {
            "properties": {
                "accountID": {
                    "description": "The ID of the account the folder belongs to",
                    "type": "string"
                },
                "id": {
                    "type": [
                        "string",
                        "number"
                    ]
                }
            },
            "required": [
                "accountID",
                "id"
            ],
            "type": "object"
        },
        "AccountObject": {
            "properties": {
                "adminIDs": {
                    "description": "CAP IDs of the admins of this account",
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "echelon": {
                    "description": "Whether or not the account is an echelon account",
                    "type": "boolean"
                },
                "expired": {
                    "description": "Whether the account is expired",
                    "type": "boolean"
                },
                "expires": {
                    "description": "Datetime when the account expires in",
                    "type": "number"
                },
                "id": {
                    "description": "The Account ID",
                    "type": "string"
                },
                "mainOrg": {
                    "description": "The main organization of the account",
                    "type": "number"
                },
                "orgIDs": {
                    "description": "The ids of the organizations",
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "paid": {
                    "description": "Whether the account is a paid account",
                    "type": "boolean"
                },
                "paidEventLimit": {
                    "description": "How many events can be used if this account is paid for",
                    "type": "number"
                },
                "unpaidEventLimit": {
                    "description": "How many events can be used if this account is unpaid for",
                    "type": "number"
                },
                "validPaid": {
                    "description": "Whether the account is a valid paid account\n\nValid paid means it is paid for and not expired",
                    "type": "boolean"
                }
            },
            "required": [
                "adminIDs",
                "echelon",
                "expired",
                "expires",
                "id",
                "mainOrg",
                "orgIDs",
                "paid",
                "paidEventLimit",
                "unpaidEventLimit",
                "validPaid"
            ],
            "type": "object"
        },
        "BlogPost": {
            "properties": {
                "accountID": {
                    "description": "The ID of the account the folder belongs to",
                    "type": "string"
                },
                "authorid": {
                    "type": "number"
                },
                "content": {
                    "$ref": "#/definitions/Draft.RawDraftContentState"
                },
                "fileIDs": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "type": "number"
                },
                "posted": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                }
            },
            "required": [
                "accountID",
                "authorid",
                "content",
                "fileIDs",
                "id",
                "posted",
                "title"
            ],
            "type": "object"
        },
        "Draft.Model.Constants.DraftBlockType": {
            "description": "The list of default valid block types.",
            "enum": [
                "atomic",
                "blockquote",
                "code-block",
                "header-five",
                "header-four",
                "header-one",
                "header-six",
                "header-three",
                "header-two",
                "ordered-list-item",
                "paragraph",
                "unordered-list-item",
                "unstyled"
            ],
            "type": "string"
        },
        "Draft.Model.Constants.DraftEntityMutability": {
            "description": "Possible \"mutability\" options for an entity. This refers to the behavior\nthat should occur when inserting or removing characters in a text range\nwith an entity applied to it.\n\n`MUTABLE`:\n   The text range can be modified freely. Generally used in cases where\n   the text content and the entity do not necessarily have a direct\n   relationship. For instance, the text and URI for a link may be completely\n   different. The user is allowed to edit the text as needed, and the entity\n   is preserved and applied to any characters added within the range.\n\n`IMMUTABLE`:\n   Not to be confused with immutable data structures used to represent the\n   state of the editor. Immutable entity ranges cannot be modified in any\n   way. Adding characters within the range will remove the entity from the\n   entire range. Deleting characters will delete the entire range. Example:\n   Facebook Page mentions.\n\n`SEGMENTED`:\n   Segmented entities allow the removal of partial ranges of text, as\n   separated by a delimiter. Adding characters wihin the range will remove\n   the entity from the entire range. Deleting characters within a segmented\n   entity will delete only the segments affected by the deletion. Example:\n   Facebook User mentions.",
            "enum": [
                "IMMUTABLE",
                "MUTABLE",
                "SEGMENTED"
            ],
            "type": "string"
        },
        "Draft.Model.Constants.DraftInlineStyleType": {
            "description": "Valid inline styles.",
            "enum": [
                "BOLD",
                "CODE",
                "ITALIC",
                "STRIKETHROUGH",
                "UNDERLINE"
            ],
            "type": "string"
        },
        "Draft.RawDraftContentBlock": {
            "description": "A plain object representation of a ContentBlock, with all style and entity\nattribution repackaged as range objects.",
            "properties": {
                "data": {
                    "$ref": "#/definitions/Object"
                },
                "depth": {
                    "type": "number"
                },
                "entityRanges": {
                    "items": {
                        "$ref": "#/definitions/Draft.RawDraftEntityRange"
                    },
                    "type": "array"
                },
                "inlineStyleRanges": {
                    "items": {
                        "$ref": "#/definitions/Draft.RawDraftInlineStyleRange"
                    },
                    "type": "array"
                },
                "key": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/Draft.Model.Constants.DraftBlockType"
                }
            },
            "required": [
                "depth",
                "entityRanges",
                "inlineStyleRanges",
                "key",
                "text",
                "type"
            ],
            "type": "object"
        },
        "Draft.RawDraftContentState": {
            "description": "A type that represents a composed document as vanilla JavaScript objects,\nwith all styles and entities represented as ranges. Corresponding entity\nobjects are packaged as objects as well.\n\nThis object is especially useful when sending the document state to the\nserver for storage, as its representation is more concise than our\nimmutable objects.",
            "properties": {
                "blocks": {
                    "items": {
                        "$ref": "#/definitions/Draft.RawDraftContentBlock"
                    },
                    "type": "array"
                },
                "entityMap": {
                    "additionalProperties": {
                        "$ref": "#/definitions/Draft.RawDraftEntity"
                    },
                    "type": "object"
                }
            },
            "required": [
                "blocks",
                "entityMap"
            ],
            "type": "object"
        },
        "Draft.RawDraftEntity": {
            "description": "A plain object representation of an EntityInstance.",
            "properties": {
                "data": {
                    "additionalProperties": {
                    },
                    "type": "object"
                },
                "mutability": {
                    "$ref": "#/definitions/Draft.Model.Constants.DraftEntityMutability"
                },
                "type": {
                    "description": "Possible entity types.",
                    "type": "string"
                }
            },
            "required": [
                "data",
                "mutability",
                "type"
            ],
            "type": "object"
        },
        "Draft.RawDraftEntityRange": {
            "description": "A plain object representation of an entity attribution.\n\nThe `key` value corresponds to the key of the entity in the `entityMap` of\na `ComposedText` object, not for use with `DraftEntity.get()`.",
            "properties": {
                "key": {
                    "type": "number"
                },
                "length": {
                    "type": "number"
                },
                "offset": {
                    "type": "number"
                }
            },
            "required": [
                "key",
                "length",
                "offset"
            ],
            "type": "object"
        },
        "Draft.RawDraftInlineStyleRange": {
            "description": "A plain object representation of an inline style range.",
            "properties": {
                "length": {
                    "type": "number"
                },
                "offset": {
                    "type": "number"
                },
                "style": {
                    "$ref": "#/definitions/Draft.Model.Constants.DraftInlineStyleType"
                }
            },
            "required": [
                "length",
                "offset",
                "style"
            ],
            "type": "object"
        },
        "DriveObject": {
            "properties": {
                "accountID": {
                    "description": "The ID of the account the folder belongs to",
                    "type": "string"
                },
                "id": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "kind": {
                    "description": "The kind of object it is, as these pass through JSON requests",
                    "type": "string"
                }
            },
            "required": [
                "accountID",
                "id",
                "kind"
            ],
            "type": "object"
        },
        "EventObject": {
            "properties": {
                "accountID": {
                    "description": "The ID of the account the folder belongs to",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the Event, can be expressed as the event number",
                    "type": "number"
                }
            },
            "required": [
                "accountID",
                "id"
            ],
            "type": "object"
        },
        "FileChildObject": {
            "properties": {
                "accountID": {
                    "description": "The ID of the account the folder belongs to",
                    "type": "string"
                },
                "childLink": {
                    "description": "A link to the child",
                    "type": "string"
                },
                "id": {
                    "description": "The ID of the child file",
                    "type": "string"
                },
                "kind": {
                    "description": "This is a child reference",
                    "enum": [
                        "drive#childReference"
                    ],
                    "type": "string"
                },
                "selfLink": {
                    "description": "A link that references the url that generated this reference",
                    "type": "string"
                }
            },
            "required": [
                "accountID",
                "childLink",
                "id",
                "kind",
                "selfLink"
            ],
            "type": "object"
        },
        "FileObject": {
            "properties": {
                "accountID": {
                    "description": "The ID of the account the folder belongs to",
                    "type": "string"
                },
                "comments": {
                    "description": "Comments about the file",
                    "type": "string"
                },
                "contentType": {
                    "description": "The MIME type for the file",
                    "type": "string"
                },
                "created": {
                    "description": "The UTC unix time stamp of when the file was created",
                    "type": "number"
                },
                "fileName": {
                    "description": "The name of the file",
                    "type": "string"
                },
                "forDisplay": {
                    "description": "Whether or not the file is displayed in the photo library (only works with photos)",
                    "type": "boolean"
                },
                "forSlideshow": {
                    "description": "Whether or not the file is to be shown in the slideshow",
                    "type": "boolean"
                },
                "id": {
                    "description": "The file identifier",
                    "type": "string"
                },
                "kind": {
                    "description": "Prevent duck typing to an extent",
                    "enum": [
                        "drive#file"
                    ],
                    "type": "string"
                },
                "memberOnly": {
                    "description": "Whether or not the file is limited to the members",
                    "type": "boolean"
                },
                "uploaderID": {
                    "description": "The id of the uploader",
                    "type": "number"
                }
            },
            "required": [
                "accountID",
                "comments",
                "contentType",
                "created",
                "fileName",
                "forDisplay",
                "forSlideshow",
                "id",
                "kind",
                "memberOnly",
                "uploaderID"
            ],
            "type": "object"
        },
        "Function": {
            "description": "Creates a new function.",
            "properties": {
                "arguments": {
                },
                "caller": {
                    "$ref": "#/definitions/Function"
                },
                "length": {
                    "type": "number"
                },
                "prototype": {
                }
            },
            "required": [
                "arguments",
                "caller",
                "length",
                "prototype"
            ],
            "type": "object"
        },
        "Identifiable": {
            "properties": {
                "id": {
                    "type": [
                        "string",
                        "number"
                    ]
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "MemberCAPWATCHErrors": {
        },
        "MemberContact": {
            "description": "Contains all the contact info for the member, according to NHQ",
            "properties": {
                "ALPHAPAGER": {
                    "$ref": "#/definitions/MemberContactInstance",
                    "description": "A contact method to use to get in touch with the member"
                },
                "ASSISTANT": {
                    "$ref": "#/definitions/MemberContactInstance",
                    "description": "A contact method to use to get in touch with the member"
                },
                "CADETPARENTEMAIL": {
                    "$ref": "#/definitions/MemberContactInstance",
                    "description": "A contact method to use to get in touch with the member"
                },
                "CADETPARENTPHONE": {
                    "$ref": "#/definitions/MemberContactInstance",
                    "description": "A contact method to use to get in touch with the member"
                },
                "CELLPHONE": {
                    "$ref": "#/definitions/MemberContactInstance",
                    "description": "A contact method to use to get in touch with the member"
                },
                "DIGITALPAGER": {
                    "$ref": "#/definitions/MemberContactInstance",
                    "description": "A contact method to use to get in touch with the member"
                },
                "EMAIL": {
                    "$ref": "#/definitions/MemberContactInstance",
                    "description": "A contact method to use to get in touch with the member"
                },
                "HOMEFAX": {
                    "$ref": "#/definitions/MemberContactInstance",
                    "description": "A contact method to use to get in touch with the member"
                },
                "HOMEPHONE": {
                    "$ref": "#/definitions/MemberContactInstance",
                    "description": "A contact method to use to get in touch with the member"
                },
                "INSTANTMESSAGER": {
                    "$ref": "#/definitions/MemberContactInstance",
                    "description": "A contact method to use to get in touch with the member"
                },
                "ISDN": {
                    "$ref": "#/definitions/MemberContactInstance",
                    "description": "A contact method to use to get in touch with the member"
                },
                "RADIO": {
                    "$ref": "#/definitions/MemberContactInstance",
                    "description": "A contact method to use to get in touch with the member"
                },
                "TELEX": {
                    "$ref": "#/definitions/MemberContactInstance",
                    "description": "A contact method to use to get in touch with the member"
                },
                "WORKFAX": {
                    "$ref": "#/definitions/MemberContactInstance",
                    "description": "A contact method to use to get in touch with the member"
                },
                "WORKPHONE": {
                    "$ref": "#/definitions/MemberContactInstance",
                    "description": "A contact method to use to get in touch with the member"
                }
            },
            "required": [
                "ALPHAPAGER",
                "ASSISTANT",
                "CADETPARENTEMAIL",
                "CADETPARENTPHONE",
                "CELLPHONE",
                "DIGITALPAGER",
                "EMAIL",
                "HOMEFAX",
                "HOMEPHONE",
                "INSTANTMESSAGER",
                "ISDN",
                "RADIO",
                "TELEX",
                "WORKFAX",
                "WORKPHONE"
            ],
            "type": "object"
        },
        "MemberContactInstance": {
            "properties": {
                "EMERGENCY": {
                    "type": "string"
                },
                "PRIMARY": {
                    "type": "string"
                },
                "SECONDARY": {
                    "type": "string"
                }
            },
            "required": [
                "EMERGENCY",
                "PRIMARY",
                "SECONDARY"
            ],
            "type": "object"
        },
        "MemberCreateError": {
        },
        "MemberObject": {
            "description": "Describes a CAP member\n\nThe member may be created from one of three ways:\n\nMember.Create: Takes sign in data and signs the user in\nMember.Check: Takes a session id and returns the user\nMember.Estimate: Estimates the user based off of CAPWATCH data",
            "properties": {
                "contact": {
                    "$ref": "#/definitions/MemberContact",
                    "description": "Contact information for the user"
                },
                "dutyPositions": {
                    "description": "Duty positions listed on CAP NHQ, along with temporary ones assigned here",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "flight": {
                    "description": "Which flight the user is in. Should only exist if not a senior member",
                    "type": "string"
                },
                "id": {
                    "description": "The CAPID of the member",
                    "type": "number"
                },
                "memberRank": {
                    "description": "The rank of the member provided",
                    "type": "string"
                },
                "nameFirst": {
                    "description": "First name of member",
                    "type": "string"
                },
                "nameLast": {
                    "description": "Last name of member",
                    "type": "string"
                },
                "nameMiddle": {
                    "description": "Middle name of member",
                    "type": "string"
                },
                "nameSuffix": {
                    "description": "Suffix of member",
                    "type": "string"
                },
                "seniorMember": {
                    "description": "Whether or not the member is a senior member",
                    "type": "boolean"
                },
                "squadron": {
                    "description": "The Squadron a member belongs to",
                    "type": "string"
                }
            },
            "required": [
                "contact",
                "dutyPositions",
                "id",
                "memberRank",
                "nameFirst",
                "nameLast",
                "nameMiddle",
                "nameSuffix",
                "seniorMember",
                "squadron"
            ],
            "type": "object"
        },
        "MemberPermissions": {
            "additionalProperties": {
                "type": "number"
            },
            "properties": {
                "AddEvent": {
                    "description": "Whether or not the user can add an event\n1 for they can add a draft event only\n2 for full access",
                    "type": "number"
                },
                "AddTeam": {
                    "description": "Whether or not the user can add a team",
                    "type": "number"
                },
                "AdministerPT": {
                    "description": "Whether or not the user can administer PT",
                    "type": "number"
                },
                "AssignPosition": {
                    "description": "Whether or not the user can assign positions",
                    "type": "number"
                },
                "AssignTasks": {
                    "description": "Whether or not the user can assign tasks",
                    "type": "number"
                },
                "CopyEvent": {
                    "description": "Whether or not the user can copy events",
                    "type": "number"
                },
                "DeleteEvent": {
                    "description": "Whether or not the user can delete events",
                    "type": "number"
                },
                "DownloadCAPWATCH": {
                    "description": "Whether or not the user can download CAPWATCH files",
                    "type": "number"
                },
                "DownloadStaffGuide": {
                    "description": "Whether or not the user can download the cadet staff guide",
                    "type": "number"
                },
                "EditEvent": {
                    "description": "Whether or not the user can",
                    "type": "number"
                },
                "EditTeam": {
                    "description": "Whether or not the user can edit a team",
                    "type": "number"
                },
                "EventContactSheet": {
                    "description": "Whether or not the user can get event contact information",
                    "type": "number"
                },
                "EventLinkList": {
                    "description": "Whether or not the user can view a list of all events",
                    "type": "number"
                },
                "EventStatusPage": {
                    "description": "Whether or not the user can get the event status page",
                    "type": "number"
                },
                "FileManagement": {
                    "description": "Whether or not the user can manage files",
                    "type": "number"
                },
                "FlightAssign": {
                    "description": "Whether or not the user can assign flight members",
                    "type": "number"
                },
                "MusterSheet": {
                    "description": "Whether or not the user can get the muster sheet",
                    "type": "number"
                },
                "ORMOPORD": {
                    "description": "Whether or not the user can get ORM OPORD information",
                    "type": "number"
                },
                "PTSheet": {
                    "description": "Whether or not the user can get PT sheets",
                    "type": "number"
                },
                "PermissionManagement": {
                    "description": "Whether or not the user can manage permissions of others",
                    "type": "number"
                },
                "PromotionManagement": {
                    "description": "Whether or not the user can manage promotions",
                    "type": "number"
                },
                "ProspectiveMemberManagment": {
                    "description": "Whether or not the user can manage prospective members",
                    "type": "number"
                },
                "RegistryEdit": {
                    "description": "Whether or not the user can edit the registry",
                    "type": "number"
                },
                "SignUpEdit": {
                    "description": "Whether or not the user can edit sign up information",
                    "type": "number"
                }
            },
            "required": [
                "AddEvent",
                "AddTeam",
                "AdministerPT",
                "AssignPosition",
                "AssignTasks",
                "CopyEvent",
                "DeleteEvent",
                "DownloadCAPWATCH",
                "DownloadStaffGuide",
                "EditEvent",
                "EditTeam",
                "EventContactSheet",
                "EventLinkList",
                "EventStatusPage",
                "FileManagement",
                "FlightAssign",
                "MusterSheet",
                "ORMOPORD",
                "PTSheet",
                "PermissionManagement",
                "PromotionManagement",
                "ProspectiveMemberManagment",
                "RegistryEdit",
                "SignUpEdit"
            ],
            "type": "object"
        },
        "Object": {
            "description": "Provides functionality common to all JavaScript objects.",
            "properties": {
                "constructor": {
                    "$ref": "#/definitions/Function",
                    "description": "The initial value of Object.prototype.constructor is the standard built-in Object constructor."
                }
            },
            "required": [
                "constructor"
            ],
            "type": "object"
        },
        "global.AccountIdentifiable": {
            "$ref": "#/definitions/AccountIdentifiable"
        },
        "global.AccountObject": {
            "$ref": "#/definitions/AccountObject"
        },
        "global.BlogPost": {
            "$ref": "#/definitions/BlogPost"
        },
        "global.DriveObject": {
            "$ref": "#/definitions/DriveObject"
        },
        "global.EventObject": {
            "$ref": "#/definitions/EventObject"
        },
        "global.FileChildObject": {
            "$ref": "#/definitions/FileChildObject"
        },
        "global.FileObject": {
            "$ref": "#/definitions/FileObject"
        },
        "global.Identifiable": {
            "$ref": "#/definitions/Identifiable"
        },
        "global.MemberAccessLevel": {
            "enum": [
                "Admin",
                "CadetStaff",
                "Manager",
                "Member"
            ],
            "type": "string"
        },
        "global.MemberCAPWATCHErrors": {
            "$ref": "#/definitions/MemberCAPWATCHErrors"
        },
        "global.MemberContact": {
            "$ref": "#/definitions/MemberContact"
        },
        "global.MemberContactInstance": {
            "$ref": "#/definitions/MemberContactInstance"
        },
        "global.MemberContactPriority": {
            "enum": [
                "EMERGENCY",
                "PRIMARY",
                "SECONDARY"
            ],
            "type": "string"
        },
        "global.MemberContactType": {
            "enum": [
                "ALPHAPAGER",
                "ASSISTANT",
                "CADETPARENTEMAIL",
                "CADETPARENTPHONE",
                "CELLPHONE",
                "DIGITALPAGER",
                "EMAIL",
                "HOMEFAX",
                "HOMEPHONE",
                "INSTANTMESSAGER",
                "ISDN",
                "RADIO",
                "TELEX",
                "WORKFAX",
                "WORKPHONE"
            ],
            "type": "string"
        },
        "global.MemberCreateError": {
            "$ref": "#/definitions/MemberCreateError"
        },
        "global.MemberObject": {
            "$ref": "#/definitions/MemberObject"
        },
        "global.MemberPermission": {
            "type": [
                "string",
                "number"
            ]
        },
        "global.MemberPermissions": {
            "$ref": "#/definitions/MemberPermissions"
        }
    }
}

