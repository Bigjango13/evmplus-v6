#%RAML 1.0
title: CAPUnit
version: v4
baseUri: https://capunit.com/api
mediaType: application/json
/files:
	/{fileid}:
		get:
			responses:
				200:
					body:
						application/json:
							type: FileObject
		delete:
			responses:
				204:
					description: It succeeded
				400:
					description: Account or file id not provided
				500:
					description: Error in unlinking the file or in updating database
		put:
			body:
				application/json:
					type: object
					properties:
						fileName: string
						comments: string
						memberOnly: boolean
						forDisplay: boolean
						forSlideshow: boolean
			responses:
				204:
					description: It succeeded
				400:
					description: One or more of the properties were not present
		patch:
			body:
				application/json:
					type: object
					properties:
						fileName?: string
						comments?: string
						memberOnly?: boolean
						forSlideshow?: boolean
						forDisplay?: boolean
			responses:
				204:
					description: It succeeded
				400:
					description: No body was sent, no account, no file ID

	/{fileid}/children:
		get:
			responses:
				200:
					body:
						application/json:
							type: object
							properties:
								kind: string
								selfLink: string
								items: FileChildObject[]
		post:
			body:
				type: object
				properties:
					id: string
			responses:
				204:
					description: It worked

	/{fileid}/children/{childid}:
		get:
			responses:
				404:
					description: Could not find a parent/child relationship between files
				200:
					body:
						application/json:
							type: FileChildObject

/events:
	/:
		get:
			responses:
				200:
					body:
						application/json:
							type: EventObject[]
		post:
			body:
				type: NewEventObject
			responses:
				200:
					body:
						application/json:
							type: EventObject
	/{id}:
		get:
			responses:
				404:
					description: Event not found
				200:
					body:
						application/json:
							type: EventObject
		post:
			body:
				type: object
				properties:
					id: string
			responses:
				404:
					description: Event not found
				204:
					description: It worked
		delete:
			responses:
				404:
					description: Event not found
				204:
					description: It worked
		put:
			body:
				type: EventObject
			responses:
				204:
					description: It worked
		
		/attendance:
			get:
				responses:
					200:
						body:
							application/json:
								type: AttendanceRecord[]
					403:
						description: Need to be signed in
			post:
				body:
					application/json:
						type: object
						properties:
							id?: string
								description: Person to sign up. If invalid permissions, this is ignored and the user making the request is used instead
				responses:
					204:
						description: It worked
					403:
						description: Need to be signed in
			put:

			delete: